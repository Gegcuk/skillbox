def ex21_5_1():
    # Задача 1. Паспортные данные
    # В базе данных поликлиники хранятся паспортные данные людей. Хранение реализовано с помощью словаря,
    # состоящего из пар «Серия и номер паспорта — фамилия и имя». Серия и номер — составной ключ,
    # а фамилия и имя — составное значение.
    data = {
        (5000, 123456): ('Иванов', 'Василий'),
        (6000, 111111): ('Иванов', 'Петр'),
        (7000, 222222): ('Медведев', 'Алексей'),
        (8000, 333333): ('Алексеев', 'Георгий'),
        (9000, 444444): ('Георгиева', 'Мария')
    }
    # Реализуйте функцию, которая по номеру и серии паспорта выдаёт имя и фамилию человека.
    serial, number = input('Enter serial and number').split()
    for passport_full_number in data:
        if passport_full_number[0] == int(serial) and passport_full_number[1] == int(number):
            print(data[passport_full_number])


def ex21_5_2():
    # Задача 2. Контакты 2
    #
    # Мы уже реализовывали телефонную книгу для Степана, однако её проблема была в том, что туда нельзя было добавить
    # людей с одинаковыми именами. Надо это исправить.
    #
    # Напишите программу, которая запрашивает у пользователя имя контакта, фамилию и номер телефона, добавляет их в
    # словарь и выводит на экран текущий словарь контактов. Словарь состоит из пар «Ф. И. — телефон», где Ф. И. —
    # это составной ключ. Запрос на добавление идёт бесконечно (но можно задать своё условие для завершения программы).
    # Обеспечьте контроль ввода: если этот человек уже есть в словаре, то выведите соответствующее сообщение.
    new_number = input('Enter new contact: ').split()
    contacts_dictionary = {(new_number[0], new_number[1]): int(new_number[2])}
    print(contacts_dictionary)
    is_end = False
    while not is_end:
        new_number = input('Enter new contact: ').split()
        if new_number == 'exit':
            is_end = True
        elif (new_number[0], new_number[1]) in contacts_dictionary:
            print('Number is existing.')
        else:
            contacts_dictionary[((new_number[0], new_number[1]))] = int(new_number[2])
        print(contacts_dictionary)
